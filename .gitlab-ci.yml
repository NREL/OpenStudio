stages:
- build_deploy
- deploy_latest_master
- testCTest
- testResources

build_deploy_develop:
  stage: build_deploy
  only:
    - develop
  script:
    # Empty s3://openstudio-builds/develop/latest/
    - aws s3 rm s3://openstudio-builds/develop/latest/ --recursive

build_deploy_develop:windows:
  stage: build_deploy
  only:
    - develop
  tags:
    - windows
  script:
    - if not exist "build" mkdir build
    - cd build
    - dir
    - if exist OpenStudio-2.*-Windows.exe del OpenStudio-2.*-Windows.exe
    - dir
    - cmake -G "Visual Studio 12 2013 Win64" ../openstudiocore
    # PAT does not build in the OpenStudio CI, at the moment
    - cmake -DBUILD_CSHARP_BINDINGS=ON -DBUILD_DOCUMENTATION=ON -DBUILD_TESTING=ON -DBUILD_DVIEW=ON -DBUILD_OS_APP=ON -DBUILD_PACKAGE=ON -DBUILD_PAT=OFF -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_DEB=OFF -DCPACK_BINARY_IFW=ON -DCPACK_BINARY_NSIS=OFF -DCPACK_BINARY_RPM=OFF -DCPACK_BINARY_STGZ=OFF -DCPACK_BINARY_TBZ2=OFF -DCPACK_BINARY_TGZ=OFF -DCPACK_BINARY_TXZ=OFF -DCPACK_BINARY_TZ=OFF  ../openstudiocore
    - cmake - ../openstudiocore
    #- cmake --build . --config Release --target ALL_BUILD
    #- cmake --build . --config Release --target PACKAGE
    # Use IncrediBuild
    - BuildConsole.exe OpenStudio.sln /cfg="Release|x64" /prj="ALL_BUILD"
    - BuildConsole.exe OpenStudio.sln /cfg="Release|x64" /prj="PACKAGE"
    #- cmake --build . --config Release --target ALL_DOXYGEN # docs do not build without errors
    - if exist "package" rd /S /Q package
    - mkdir package
    - copy OpenStudio-2.*-Windows.exe package
    - move /y OpenStudio-2.*-Windows.exe OpenStudio.exe
    - cd package
    - aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/ --recursive --exclude "*" --include "OpenStudio-2.*-Windows.exe"
    - aws s3 cp ./ s3://openstudio-builds/develop/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Windows.exe"
    - cd ../
    #- cd /doc
    #- aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/doc --recursive --exclude "*" --include "*.zip"
  retry: 1
  artifacts:
    expire_in: 24 hrs
    paths:
      - build/
  cache:
    key: openstudio_windows
    untracked: true
    #policy: push # NOTE: use default pull-push policy
    paths:
      - build

build_deploy_develop:mac:
  stage: build_deploy
  only:
    - develop
  tags:
    - mac
  script:
    - date +%R
    - ls
    - mkdir -p build/_CPack_Packages/Darwin/IFW
    - cd build/_CPack_Packages/Darwin/IFW
    - ls
    - rm -f OpenStudio-2.*-Darwin.zip
    - ls
    - date +%R
    - cd ../../../
    - pwd
    - ls
    - cmake -DOPENSSL_INCLUDE_DIR=/usr/bin/openssl -DBUILD_TESTING=ON -DBUILD_DVIEW=ON -DBUILD_OS_APP=ON -DBUILD_PACKAGE=ON -DBUILD_PAT=ON -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_DEB=OFF -DCPACK_BINARY_IFW=ON -DCPACK_BINARY_NSIS=OFF -DCPACK_BINARY_RPM=OFF -DCPACK_BINARY_STGZ=OFF -DCPACK_BINARY_TBZ2=OFF -DCPACK_BINARY_TGZ=OFF -DCPACK_BINARY_TXZ=OFF -DCPACK_BINARY_TZ=OFF ../openstudiocore
    - make -j16 package
    - date +%R
    - cd _CPack_Packages/Darwin/IFW
    - zip -r `ls -1 | grep OpenStudio-*.app | sed -e 's/\.app$//'`.zip OpenStudio-*.app
    - aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/ --recursive --exclude "*" --include "OpenStudio-2.*-Darwin.zip"
    - aws s3 cp ./ s3://openstudio-builds/develop/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Darwin.zip"
    - date +%R
  retry: 1
  artifacts:
    expire_in: 24 hrs
    paths:
      - build/
  cache:
    key: openstudio_mac
    untracked: true
    #policy: push # NOTE: use default pull-push policy
    paths:
      - build

build_deploy_develop:ubuntu:
  stage: build_deploy
  only:
    - develop
  tags:
    - ubuntu
  script:
    - date +%R
    - ls
    - mkdir -p build
    - cd build
    - ls
    - rm -f OpenStudio-2.*-Linux.deb
    - ls
    - date +%R
    - cmake -DOPENSSL_INCLUDE_DIR=/usr/bin/openssl -DBUILD_TESTING=ON -DBUILD_DVIEW=ON -DBUILD_OS_APP=ON -DBUILD_PACKAGE=ON -DBUILD_PAT=OFF -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_DEB=ON -DCPACK_BINARY_IFW=OFF -DCPACK_BINARY_NSIS=OFF -DCPACK_BINARY_RPM=OFF -DCPACK_BINARY_STGZ=OFF -DCPACK_BINARY_TBZ2=OFF -DCPACK_BINARY_TGZ=OFF -DCPACK_BINARY_TXZ=OFF -DCPACK_BINARY_TZ=OFF ../openstudiocore
    - make -j16 package
    - mv OpenStudio-2.*-Linux.deb OpenStudio.deb
    - cd _CPack_Packages/Linux/DEB
    - ls
    - rm -rf `ls -d */ | grep OpenStudio-2.*-Linux`
    - ls
    - date +%R
    - aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/ --recursive --exclude "*" --include "OpenStudio-2.*-Linux.deb"
    - aws s3 cp ./ s3://openstudio-builds/develop/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Linux.deb"
    - date +%R
  retry: 1
  artifacts:
    expire_in: 24 hrs
    paths:
      - build/
  cache:
    key: openstudio_ubuntu
    untracked: true
    #policy: push # NOTE: use default pull-push policy
    paths:
      - build

build_deploy_all_others:windows:
  stage: build_deploy
  only:
     - triggers
     - master
     - iteration
  tags:
    - windows
  script:
    - if not exist "build" mkdir build
    - cd build
    - dir
    - if exist OpenStudio-2.*-Windows.exe del OpenStudio-2.*-Windows.exe
    - dir
    - cmake -G "Visual Studio 12 2013 Win64" ../openstudiocore
    # PAT does not build in the OpenStudio CI, at the moment
    - cmake -DBUILD_CSHARP_BINDINGS=ON -DBUILD_DOCUMENTATION=ON -DBUILD_TESTING=ON -DBUILD_DVIEW=ON -DBUILD_OS_APP=ON -DBUILD_PACKAGE=ON -DBUILD_PAT=OFF -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_DEB=OFF -DCPACK_BINARY_IFW=ON -DCPACK_BINARY_NSIS=OFF -DCPACK_BINARY_RPM=OFF -DCPACK_BINARY_STGZ=OFF -DCPACK_BINARY_TBZ2=OFF -DCPACK_BINARY_TGZ=OFF -DCPACK_BINARY_TXZ=OFF -DCPACK_BINARY_TZ=OFF  ../openstudiocore
    - cmake - ../openstudiocore
    #- cmake --build . --config Release --target ALL_BUILD
    #- cmake --build . --config Release --target PACKAGE
    # Use IncrediBuild
    - BuildConsole.exe OpenStudio.sln /cfg="Release|x64" /prj="ALL_BUILD"
    - BuildConsole.exe OpenStudio.sln /cfg="Release|x64" /prj="PACKAGE"
    #- cmake --build . --config Release --target ALL_DOXYGEN # docs do not build without errors
    - if exist "package" rd /S /Q package
    - mkdir package
    - copy OpenStudio-2.*-Windows.exe package
    - move /y OpenStudio-2.*-Windows.exe OpenStudio.exe
    - cd package
    - aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/ --recursive --exclude "*" --include "OpenStudio-2.*-Windows.exe"
    - cd ../
    #- cd /doc
    #- aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/doc --recursive --exclude "*" --include "*.zip"
  retry: 1
  artifacts:
    expire_in: 24 hrs
    paths:
      - build/
  cache:
    key: openstudio_windows
    untracked: true
    #policy: push # NOTE: use default pull-push policy
    paths:
      - build

build_deploy_all_others:mac:
  stage: build_deploy
  only:
    - triggers
    - master
    - iteration
  tags:
    - mac
  script:
    - date +%R
    - ls
    - mkdir -p build/_CPack_Packages/Darwin/IFW
    - cd build/_CPack_Packages/Darwin/IFW
    - ls
    - rm -f OpenStudio-2.*-Darwin.zip
    - ls
    - date +%R
    - cd ../../../
    - pwd
    - ls
    - cmake -DOPENSSL_INCLUDE_DIR=/usr/bin/openssl -DBUILD_TESTING=ON -DBUILD_DVIEW=ON -DBUILD_OS_APP=ON -DBUILD_PACKAGE=ON -DBUILD_PAT=ON -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_DEB=OFF -DCPACK_BINARY_IFW=ON -DCPACK_BINARY_NSIS=OFF -DCPACK_BINARY_RPM=OFF -DCPACK_BINARY_STGZ=OFF -DCPACK_BINARY_TBZ2=OFF -DCPACK_BINARY_TGZ=OFF -DCPACK_BINARY_TXZ=OFF -DCPACK_BINARY_TZ=OFF ../openstudiocore
    - make -j16 package
    - date +%R
    - cd _CPack_Packages/Darwin/IFW
    - zip -r `ls -1 | grep OpenStudio-*.app | sed -e 's/\.app$//'`.zip OpenStudio-*.app
    - aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/ --recursive --exclude "*" --include "OpenStudio-2.*-Darwin.zip"
    - date +%R
  retry: 1
  artifacts:
    expire_in: 24 hrs
    paths:
      - build/
  cache:
    key: openstudio_mac
    untracked: true
    #policy: push # NOTE: use default pull-push policy
    paths:
      - build

build_deploy_all_others:ubuntu:
  stage: build_deploy
  only:
    - triggers
    - master
    - iteration
  tags:
    - ubuntu
  script:
    - date +%R
    - ls
    - mkdir -p build
    - cd build
    - ls
    - rm -f OpenStudio-2.*-Linux.deb
    - ls
    - date +%R
    - cmake -DOPENSSL_INCLUDE_DIR=/usr/bin/openssl -DBUILD_TESTING=ON -DBUILD_DVIEW=ON -DBUILD_OS_APP=ON -DBUILD_PACKAGE=ON -DBUILD_PAT=OFF -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_DEB=ON -DCPACK_BINARY_IFW=OFF -DCPACK_BINARY_NSIS=OFF -DCPACK_BINARY_RPM=OFF -DCPACK_BINARY_STGZ=OFF -DCPACK_BINARY_TBZ2=OFF -DCPACK_BINARY_TGZ=OFF -DCPACK_BINARY_TXZ=OFF -DCPACK_BINARY_TZ=OFF ../openstudiocore
    - make -j16 package
    - mv OpenStudio-2.*-Linux.deb OpenStudio.deb
    - cd _CPack_Packages/Linux/DEB
    - ls
    - rm -rf `ls -d */ | grep OpenStudio-2.*-Linux`
    - ls
    - date +%R
    - aws s3 cp ./ s3://openstudio-builds/_CI/OpenStudio/ --recursive --exclude "*" --include "OpenStudio-2.*-Linux.deb"
    - aws s3 cp ./ s3://openstudio-builds/develop/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Linux.deb"
    - date +%R
  retry: 1
  artifacts:
    expire_in: 24 hrs
    paths:
      - build/
  cache:
    key: openstudio_ubuntu
    untracked: true
    #policy: push # NOTE: use default pull-push policy
    paths:
      - build

deploy_latest_master:
  stage: deploy_latest_master
  only:
    - master
  dependencies:
    - build_deploy_all_others:windows
    - build_deploy_all_others:mac
    - build_deploy_all_others:ubuntu
  script:
    # Empty s3://openstudio-builds/master/latest/
    - aws s3 rm s3://openstudio-builds/master/latest/ --recursive

deploy_latest_master:windows:
  stage: deploy_latest_master
  only:
    - master
  tags:
    - windows
  dependencies:
    - build_deploy_all_others:windows
  script:
    - aws s3 cp ./ s3://openstudio-builds/master/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Windows.exe"

deploy_latest_master:mac:
  stage: deploy_latest_master
  only:
    - master
  tags:
    - mac
  dependencies:
    - build_deploy_all_others:mac
  script:
    - aws s3 cp ./ s3://openstudio-builds/master/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Darwin.zip"

deploy_latest_master:ubuntu:
  stage: deploy_latest_master
  only:
    - master
  tags:
    - ubuntu
  dependencies:
    - build_deploy_all_others:ubuntu
  script:
    - aws s3 cp ./ s3://openstudio-builds/master/latest/ --recursive --exclude "*" --include "OpenStudio-2.*-Linux.deb"

testCTest_develop:windows:
  stage: testCTest
  only:
    - develop
  tags:
    - windows
  dependencies:
    - build_deploy_develop:windows
  script:
    - cd build
    - dir
    - ctest
  allow_failure: true

testCTest_develop:mac:
  stage: testCTest
  only:
    - develop
  tags:
    - mac
  dependencies:
    - build_deploy_develop:mac
  script:
    - cd build
    - ls
    - ctest
  allow_failure: true

testCTest_develop:ubuntu:
  stage: testCTest
  only:
    - develop
  tags:
    - ubuntu
  dependencies:
    - build_deploy_develop:ubuntu
  script:
    - cd build
    - ls
    - ctest
  allow_failure: true

testCTest_all_others:windows:
  stage: testCTest
  only:
    - triggers
    - master
    - iteration
  tags:
    - windows
  dependencies:
    - build_deploy_all_others:windows
  script:
    - cd build
    - dir
    - ctest
  allow_failure: true

testCTest_all_others:mac:
  stage: testCTest
  only:
    - triggers
    - master
    - iteration
  tags:
    - mac
  dependencies:
    - build_deploy_all_others:mac
  script:
    - cd build
    - ls
    - ctest
  allow_failure: true

testCTest_all_others:ubuntu:
  stage: testCTest
  only:
    - triggers
    - master
    - iteration
  tags:
    - ubuntu
  dependencies:
    - build_deploy_all_others:ubuntu
  script:
    - cd build
    - ls
    - ctest
  allow_failure: true

testResources_develop:windows:
  stage: testResources
  only:
    - develop
  tags:
    - windows
  dependencies:
    - build_deploy_develop
  script:
    - "rmdir c:\\\\openstudio\\ /s /q"
    - dir
    - cd build
    - dir
    - OpenStudio.exe --script ../install.qs
    - cd c://openstudio/
    - git clone https://github.com/NREL/OpenStudio-resources.git
    - cd bin/
    - openstudio.exe ../OpenStudio-resources/model_tests.rb"
  allow_failure: true

testResources_all_others:windows:
  stage: testResources
  only:
    - triggers
    - master
    - iteration
  tags:
    - windows
  dependencies:
    - build_deploy_all_others:windows
  script:
    - "rmdir c:\\\\openstudio\\ /s /q"
    - dir
    - cd build
    - dir
    - OpenStudio.exe --script ../install.qs
    - cd c://openstudio/
    - git clone https://github.com/NREL/OpenStudio-resources.git
    - cd bin/
    - openstudio.exe ../OpenStudio-resources/model_tests.rb"
  allow_failure: true

#testResources:mac:
#  stage: testResources
#  only:
#    - triggers
#    - master
#    - iteration
#    - develop
#  tags:
#    - mac
#  dependencies:
#    - build_deploy_all_others:mac
#  script:
#    - rm -rf /OpenStudio
#    - cd build
#    - ls
#    - unzip `ls | grep OpenStudio*.zip`
#    - ls
#    - mv `ls | grep OpenStudio*.app` openstudio
#    - ls
#    - ./openstudio --script install.qs
#    - cd OpenStudio/
#    - git clone https://github.com/NREL/OpenStudio-resources.git
#    - cd bin/
#    - ./openstudio ../OpenStudio-resources/model_tests.rb
#  allow_failure: true

#testResources:ubuntu:
#  stage: testResources
#  only:
#    - triggers
#    - master
#    - iteration
#    - develop
#  tags:
#    - ubuntu
#  dependencies:
#    - build_deploy_all_others:ubuntu
#  script:
#    - rm -rf /OpenStudio
#    - cd build
#    - ls
#    - mv `ls | grep OpenStudio*.deb` openstudio
#    - ls
#    - ./openstudio
#    - cd OpenStudio/
#    - git clone https://github.com/NREL/OpenStudio-resources.git
#    - cd bin/
#    - ./openstudio ../OpenStudio-resources/model_tests.rb
#  allow_failure: true

