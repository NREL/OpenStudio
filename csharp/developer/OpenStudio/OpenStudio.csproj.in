<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks Condition="'$(OS)' == 'Windows_NT'">NET45;netstandard2.0</TargetFrameworks>
    <TargetFramework Condition="'$(OS)' != 'Windows_NT'">netstandard2.0</TargetFramework>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeReferencedLibInPackage</TargetsForTfmSpecificContentInPackage>
    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <OutputPath>${CSHARP_LIBRARY_OUTPUT_DIRECTORY_NATIVE}\$(Configuration)\</OutputPath>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>${CSHARP_SOURCE_DIR_NATIVE}\developer\OpenStudio\StrongNameKeyFile.snk</AssemblyOriginatorKeyFile>


    <!-- CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member' -->
    <!-- CS0108: iddObjectType() hides inherited member ModelObject.iddObjectType() -->
    <!-- CS2002: source file specified multiple times: CANNOT BE SUPPRESSED, cf https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/nowarn-compiler-option-->
    <NoWarn>1591,0108,2002</NoWarn>
    <WarningLevel>4</WarningLevel>


    <!-- NuGet metadata properties -->
    <Product>OpenStudio</Product>
    <Version>${CSHARP_ASSEMBLY_VERSION}</Version>
    <Copyright>Copyright (c) 2008-2025, Alliance for Sustainable Energy, LLC, and other contributors. All rights reserved.</Copyright>
    <Description>OpenStudio C# bindings for whole building energy simulation</Description>
    <RepositoryUrl>https://github.com/NREL/OpenStudio</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <Authors>NREL</Authors>
    <PackageTags>OpenStudio;EnergyPlus;Simulation;Modeling</PackageTags>
    <!-- Deprecated -->
    <PackageLicenseUrl>http://github.com/NREL/OpenStudio/blob/develop/LICENSE.md</PackageLicenseUrl>


  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>full</DebugType>
  </PropertyGroup>

<!-- Linux:
libopenstudio_csharp.so
libopenstudio_model_csharp.so
libopenstudio_translators_csharp.so
libopenstudiolib.so
-->

<!-- Mac:
libopenstudio_csharp.dylib
libopenstudio_model_csharp.dylib
libopenstudio_translators_csharp.dylib
libopenstudiolib.dylib
-->

<!-- Windows:
openstudio_csharp.dll
openstudio_model_csharp.dll
openstudio_translators_csharp.dll
openstudiolib.dll
 -->

  <Target Name="IncludeReferencedLibInPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <Message Text="DEBUGGING: OS=$(OS) TargetFramework=$(TargetFramework) Architecture=$(Architecture) Platform=$(Platform) RID=$(Rid)" />
    <Message Text="DEBUGGING: is_osx1=$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX))) is_osx2=$([MSBuild]::IsOsPlatform('OSX'))" />
    <Message Text="DEBUGGING: System.Runtime.InteropServices.RuntimeInformation: OSArchitecture=$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture), RuntimeIdentifier=$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier), OSDescription=$([System.Runtime.InteropServices.RuntimeInformation]::OSDescription)" />
    <PropertyGroup>
      <Rid>$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</Rid>
      <IsLinux>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))</IsLinux>
      <IsDarwin>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsDarwin>
      <IsWindows>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))</IsWindows>
      <IsArm64>False</IsArm64>
      <IsArm64 Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64' ">true</IsArm64>
    </PropertyGroup>
    <Message Text="DEBUGGING: Rid=$(Rid), IsLinux=$(IsLinux), IsDarwin=$(IsDarwin), IsWindows=$(IsWindows), IsArm64=$(IsArm64), IsNotArm64=$(IsNotArm64)" />
    <Message Condition=" $(IsDarwin) And !$(IsArm64) " Text="Darwin not arm64" />
    <Message Condition=" $(IsDarwin) And $(IsArm64) " Text="Darwin arm64" />
    <!-- for Windows -->
    <ItemGroup Condition=" $(IsWindows) ">
      <TfmSpecificPackageFile Include="../Products/Release/openstudio*csharp.dll" PackagePath="lib/$(TargetFramework)" />
      <TfmSpecificPackageFile Include="../Products/Release/openstudiolib.dll" PackagePath="lib/$(TargetFramework)" />
    </ItemGroup>

    <!-- for Linux -->
    <ItemGroup Condition=" $(IsLinux) ">
      <TfmSpecificPackageFile Include="../Products/*openstudio*csharp.so" PackagePath="runtimes/linux-x64/native" />
      <TfmSpecificPackageFile Include="../Products/*openstudiolib.so" PackagePath="runtimes/linux-x64/native" />
      <TfmSpecificPackageFile Include="../Products/OpenStudio-linux-x64.targets" PackagePath="build/OpenStudio.targets" />
    </ItemGroup>

    <!-- for Mac  -->
    <ItemGroup Condition=" $(IsDarwin) And !$(IsArm64) ">
      <TfmSpecificPackageFile Include="../Products/*openstudio*csharp.dylib" PackagePath="runtimes/osx-x64/native" />
      <TfmSpecificPackageFile Include="../Products/*openstudiolib.dylib" PackagePath="runtimes/osx-x64/native" />
      <TfmSpecificPackageFile Include="../Products/OpenStudio-osx-x64.targets" PackagePath="build/OpenStudio.targets" />
    </ItemGroup>
    <ItemGroup Condition=" $(IsDarwin) And $(IsArm64) ">
      <TfmSpecificPackageFile Include="../Products/*openstudio*csharp.dylib" PackagePath="runtimes/$(Rid)/native" />
      <TfmSpecificPackageFile Include="../Products/*openstudiolib.dylib" PackagePath="runtimes/$(Rid)/native" />
      <TfmSpecificPackageFile Include="../Products/OpenStudio-$(Rid).targets" PackagePath="build/OpenStudio.targets" />
    </ItemGroup>

  </Target>

</Project>
