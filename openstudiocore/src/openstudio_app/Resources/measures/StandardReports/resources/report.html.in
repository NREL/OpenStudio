<!DOCTYPE html>
<meta charset="utf-8">
<title>Results | OpenStudio</title>
<link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css" rel="stylesheet">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

.x.axis path {
  display: none;
}

</style>
<body>

<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.3.9/d3.min.js"></script>

</head>
<body>

<div class="row-fluid">
  <div class="span5">
    <h4 id="title-0"></h4>
    <div id="chart-0"></div>
  </div>
  <div class="span7">
    <h4 id="title-1"></h4>
    <div id="chart-1"></div>
  </div>
</div>
<script>
function numFormat(n) {
    var parts = n.toString().split(".");
    return parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",") + (parts[1] ? "." + parts[1] : "");
}

var months = [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
    ];

<%= energy %>

function outputTable(name, units, obj) {
  if(name == "Electricity Consumption" | name == "Natural Gas Consumption" | name == "District Cooling Consumption" | name == "District Heating Consumption") {
    $('<h4>').text(name + " (" + units + ")").appendTo('body');
    var $table = $('<table id="' + name.toLowerCase().replace(/ /g, '-') + '">').addClass("table table-striped table-bordered table-condensed");
    $table.append('<thead>').children('thead').append('<tr />').children('tr').append('<th>&nbsp;</th><th>Jan</th><th>Feb</th><th>Mar</th><th>Apr</th><th>May</th><th>Jun</th><th>Jul</th><th>Aug</th><th>Sep</th><th>Oct</th><th>Nov</th><th>Dec</th><th>Total</th>');
    var $tbody = $table.append('<tbody />').children('tbody');
    var key;
    var totalTotal = 0;
    var columnTotal = new Array();
    for (key in obj) {
        if (obj.hasOwnProperty(key)) {
            var $row = $tbody.append('<tr />').children('tr:last');
            $row.append("<td>" + key + "</td>");
            var total = 0;
            for (i = 0; i < obj[key].length; i++) {
                if (columnTotal[i] === undefined) columnTotal[i] = 0;
                $row.append("<td>" + (obj[key][i] === 0 ? "&mdash;" : numFormat(obj[key][i])) + "</td>");
                total += obj[key][i];
                columnTotal[i] += obj[key][i];
            }
            totalTotal += total;
            $row.append("<td>" + (total === 0 ? "&mdash;" : numFormat(total.toFixed(3))) + "</td>");
        }
    }
    // Append column totals as new, last row of table
    if (columnTotal[columnTotal.length] === undefined) columnTotal[columnTotal.length] = 0;
    columnTotal[columnTotal.length-1] = totalTotal
    var $row = $tbody.append('<tr />').children('tr:last');
    $row.append("<td>Total</td>");
    for (i = 0; i < columnTotal.length; i++) {
        $row.append("<td>" + (columnTotal[i] === 0 ? "&mdash;" : numFormat(columnTotal[i].toFixed(3))) + "</td>");
    }
    $table.appendTo('body');
  }
}

$.each(consumption, function (key, obj) {
    outputTable(key, obj.units, obj.data);
});

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 560 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .rangeRound([height, 0]);

var color = d3.scale.ordinal()
    .range(["#EF1C21", "#0071BD", "#F7DF10", "#DEC310", "#4A4D4A", "#B5B2B5", "#FF79AD", "#632C94", "#F75921", "#293094", "#CE5921", "#FFB239", "#29AAE7", "#8CC739"]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(d3.format(".2s"));

var charts = ["Electricity Consumption","Natural Gas Consumption"];

for (var c in charts) {

  if(c == charts.length - 1){
      margin.right = 125;
  }

  $('#title-'+c).text(charts[c]);

  var svg = d3.select("#chart-" + c).append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  data = [];
  for (var enduse in consumption[charts[c]].data) {
    var enduse_data = consumption[charts[c]].data[enduse];
    for (var month=0; month < months.length; month++) {
      if (data.length < months.length) {
        var temp = {
          "Month": months[month]
        }
        temp[enduse] = enduse_data[month];
        data.push(temp);
      } else {
        data[month][enduse] = enduse_data[month];
      }
    }
  }
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "Month"; }));

  data.forEach(function(d) {
    var y0 = 0;
    d.consumption = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });
    d.total = d.consumption[d.consumption.length - 1].y1;
  });

  //data.sort(function(a, b) { return b.total - a.total; });

  x.domain(data.map(function(d) { return d.Month; }));
  y.domain([0, d3.max(data, function(d) { return d.total; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", -36)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text(consumption[charts[c]].units);

  var month = svg.selectAll(".month")
      .data(data)
    .enter().append("g")
      .attr("class", "g")
      .attr("transform", function(d) { return "translate(" + x(d.Month) + ",0)"; });

  month.selectAll("rect")
      .data(function(d) { return d.consumption; })
    .enter().append("rect")
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.y1); })
      .attr("height", function(d) { return y(d.y0) - y(d.y1); })
      .style("fill", function(d) { return color(d.name); });

  if(c == charts.length - 1){
    var legend = svg.selectAll(".legend")
        .data(color.domain().slice())
      .enter().append("g")
        .attr("class", "legend")
        .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

    legend.append("rect")
        .attr("x", width + 105)
        .attr("width", 18)
        .attr("height", 18)
        .style("fill", color);

    legend.append("text")
        .attr("x", width + 105 - 3)
        .attr("y", 9)
        .attr("dy", ".35em")
        .style("text-anchor", "end")
        .text(function(d) { return d; });
  }
}
</script>
</body>
</html>

